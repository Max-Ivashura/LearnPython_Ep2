### Задание 1: Простая обработка исключений
Напиши программу, которая запрашивает у пользователя ввод числа. Если пользователь введёт что-то, что не является числом,
 программа должна обработать это с помощью try и except и вывести сообщение об ошибке.

Подсказка: Используй функцию int() для преобразования строки в число.

### Задание 2: Обработка нескольких исключений
Напиши программу, которая запрашивает у пользователя два числа и делит первое число на второе. Обработай следующие исключения:
- Деление на ноль (ZeroDivisionError)
- Ввод некорректных данных (ValueError)

После обработки каждого исключения выводи соответствующее сообщение об ошибке.

### Задание 3: Создание собственных исключений
Создай собственное исключение NegativeNumberError, которое будет использоваться для проверки, является ли число положительным.
 Напиши класс Calculator, который будет содержать метод add, складывающий два числа. Если одно из чисел негативное,
  выбрасывай исключение NegativeNumberError.
Обработай это исключение в коде, который вызывает метод add.

### Задание 4: Логирование исключений
Напиши программу, которая читает содержимое файла и обрабатывает возможные исключения, такие как:
- Файл не найден (FileNotFoundError)
- Ошибка при чтении (IOError)

При возникновении исключения выводи соответствующее сообщение об ошибке и записывай информацию о нём в другой файл error_log.txt.

### Задание 5: Кастомизация исключений
Создай собственный класс исключений InvalidAgeError, который будет использоваться для валидации возраста пользователя.
 Напиши функцию validate_age, которая принимает возраст и выбрасывает InvalidAgeError, если возраст меньше 0 или больше 120.
Обработай исключение в коде, который вызывает эту функцию, и выведи сообщение об ошибке.